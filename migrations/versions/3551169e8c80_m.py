"""-m

Revision ID: 3551169e8c80
Revises: e688981d7b26
Create Date: 2025-06-11 15:58:10.913463

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3551169e8c80'
down_revision = 'e688981d7b26'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_categories',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('transaction_id', 'category_id')
    )
    op.drop_table('expense')
    op.drop_table('income')
    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=50, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=100),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=80, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=150),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=150),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128, collation='SQL_Latin1_General_CP1_CI_AS'),
               type_=sa.String(length=150),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=128, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=120, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=80, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)

    with op.batch_alter_table('category', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50, collation='SQL_Latin1_General_CP1_CI_AS'),
               existing_nullable=False)

    op.create_table('income',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(length=200, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('amount', sa.FLOAT(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('FK__income__user_id__6FE99F9F')),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__income__3213E83F76F4866C'))
    )
    op.create_table('expense',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1), autoincrement=True, nullable=False),
    sa.Column('description', sa.VARCHAR(length=200, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False),
    sa.Column('amount', sa.FLOAT(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.DATETIME(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('FK__expense__categor__6B24EA82')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('FK__expense__user_id__6754599E')),
    sa.PrimaryKeyConstraint('id', name=op.f('PK__expense__3213E83F776E08A4'))
    )
    op.drop_table('transaction_categories')
    op.drop_table('transaction')
    op.drop_table('account')
    # ### end Alembic commands ###
